[{"D:\\www\\my sites\\converter.app\\src\\index.js":"1","D:\\www\\my sites\\converter.app\\src\\reportWebVitals.js":"2","D:\\www\\my sites\\converter.app\\src\\App.js":"3","D:\\www\\my sites\\converter.app\\src\\components\\Header.jsx":"4","D:\\www\\my sites\\converter.app\\src\\components\\Input.jsx":"5","D:\\www\\my sites\\converter.app\\src\\components\\Select.jsx":"6"},{"size":162,"mtime":1619122495414,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":2942,"mtime":1619122585188,"results":"11","hashOfConfig":"8"},{"size":288,"mtime":1619027036556,"results":"12","hashOfConfig":"8"},{"size":484,"mtime":1619122374086,"results":"13","hashOfConfig":"8"},{"size":726,"mtime":1619026954467,"results":"14","hashOfConfig":"8"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"75gapj",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"chcec8",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\www\\my sites\\converter.app\\src\\index.js",[],"D:\\www\\my sites\\converter.app\\src\\reportWebVitals.js",[],"D:\\www\\my sites\\converter.app\\src\\App.js",["28","29"],"import React, { Fragment, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport './App.css';\r\nimport Input from \"./components/Input\";\r\nimport Header from \"./components/Header\";\r\nimport Select from './components/Select';\r\n\r\n\r\n\r\nfunction App() {\r\n  const [inputValue, setInputValue] = useState({\r\n    valueOfItem: \"\",\r\n    name: \"\"\r\n  });\r\n\r\n  const [select, setSelect] = useState({\r\n    arrayOfItems: [],\r\n    currency: \"EUR\",\r\n    activeObj: {\r\n      rate: 0,\r\n      txt: \"\"\r\n    },\r\n  })\r\n\r\n  const [themeLight, setTheme] = useState(true);\r\n\r\n  const actualTheme = themeLight === false ? document.body.classList.add(\"dark\") : document.body.classList.remove(\"dark\");\r\n\r\n  async function getRate() {\r\n    axios.get(\"https://bank.gov.ua/NBUStatService/v1/statdirectory/exchange?json\")\r\n      .then(response => response.data)\r\n      .then(data => setSelect({ ...select, arrayOfItems: data, activeObj: data.find(item => item.cc === select.currency) }))\r\n      .catch(e => console.log(e))\r\n  }\r\n\r\n  useEffect(() => {\r\n    getRate();\r\n  }, [select.currency])\r\n\r\n\r\n  const changeRate = (e) => {\r\n    setSelect({ ...select, currency: e.target.value });\r\n  }\r\n\r\n  const ua = inputValue.name === \"ua\" ? (inputValue.valueOfItem / select.activeObj.rate).toFixed(2) : inputValue.valueOfItem;\r\n  const etc = inputValue.name === \"etc\" ? (inputValue.valueOfItem * select.activeObj.rate).toFixed(2) : inputValue.valueOfItem;\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container\">\r\n        <div className=\"theme\">\r\n          <input className=\"theme__input\" type=\"checkbox\" id=\"checkbox\" onChange={() => setTheme(!themeLight)} />\r\n          <label for=\"checkbox\" className=\"theme__label\">\r\n          </label>\r\n        </div>\r\n        <div className=\"wrapper\">\r\n          <Header />\r\n          <div className=\"inner\">\r\n            <div className=\"block\">\r\n              <Input name=\"etc\" rate={ua} onChange={e => setInputValue({\r\n                name: \"etc\", valueOfItem: +e.target.value.replace(/[^\\d]/g) ? +e.target.value.replace(/[^\\d]/g) : \"\"\r\n              })} />\r\n              <Select currency={select.currency} changeRate={changeRate} arrayOfItems={select.arrayOfItems} />\r\n            </div>\r\n            <div className=\"block\">\r\n              <Input name=\"ua\" rate={etc} onChange={e => setInputValue({\r\n                name: \"ua\", valueOfItem: +e.target.value.replace(/[^\\d]/g) ? +e.target.value.replace(/[^\\d]/g) : \"\"\r\n              })} />\r\n              <span className=\"uah\">UAH</span>\r\n              <div className=\"text\">{`1 ${select.activeObj.txt.toLowerCase()} - ${(select.activeObj.rate).toFixed(2)}  гривень`}</div>\r\n\r\n            </div>\r\n            <button\r\n              className=\"clear\"\r\n              onClick={() => setInputValue({ valueOfItem: \"\", name: \"\" })}\r\n            >Очистити </button>\r\n          </div>\r\n        </div>\r\n      </div >\r\n    </Fragment >\r\n  )\r\n}\r\nexport default App;\r\n\r\n","D:\\www\\my sites\\converter.app\\src\\components\\Header.jsx",[],"D:\\www\\my sites\\converter.app\\src\\components\\Input.jsx",[],"D:\\www\\my sites\\converter.app\\src\\components\\Select.jsx",[],{"ruleId":"30","severity":1,"message":"31","line":27,"column":9,"nodeType":"32","messageId":"33","endLine":27,"endColumn":20},{"ruleId":"34","severity":1,"message":"35","line":38,"column":6,"nodeType":"36","endLine":38,"endColumn":23,"suggestions":"37"},"no-unused-vars","'actualTheme' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRate'. Either include it or remove the dependency array.","ArrayExpression",["38"],{"desc":"39","fix":"40"},"Update the dependencies array to be: [getRate, select.currency]",{"range":"41","text":"42"},[1052,1069],"[getRate, select.currency]"]